{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noefu\\\\Desktop\\\\Computacion_ubicua\\\\SPOC_3\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactDOMServer from \"react-dom/server\"; // COMPONENTS\n\nimport GlobalChat from \"./components/ConnectedUserList\";\nimport ConnectedUserList from \"./components/GlobalChat\";\nimport PrivateChat from \"./components/PrivateChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [message, setMessage] = useState(\"\");\n  const [socket, setSocket] = useState(setSocket(io(\"localhost:3001\")));\n  const [username, setUsername] = useState(\"\");\n  const [globalChat, setGlobalChat] = useState(); // const [currentState, setCurrentState] = useState(\"global_chat\");\n\n  useEffect(() => {\n    setSocket(io(\"localhost:3001\"));\n  }, []);\n  useEffect(() => {\n    console.log(\"socket acaba de cambiar\");\n\n    if (socket) {\n      // The server returns our new username\n      socket.on(\"new_username\", function (myUserName) {\n        setUsername(myUserName);\n      }); // A new GLOBAL message comes from the server\n\n      socket.on(\"broadcast_public_message\", function (newGLobalMessage) {\n        let newHtmlMessage = buildTextMessage(newGLobalMessage);\n        setGlobalChat(newHtmlMessage);\n      });\n    }\n  }, [socket]);\n  /* \r\n  * BLOCK 1\r\n  * Socket EVENT declaration\r\n  */\n  // // Start the comms with the server\n  // useEffect(() => {\n  //   if (socket == null) {\n  //     setSocket(() => {\n  //       return io(\"localhost:3001\");\n  //     });\n  //   }\n  // }, []);\n\n  /* \r\n   * BLOCK 2\r\n   * Application FUNCTIONS\r\n  */\n\n  function sendPublicMessage() {\n    // Extract the message from the box and clear it\n    let message = document.getElementById(\"input_message\").value;\n\n    if (message != \"\") {\n      document.getElementById(\"input_message\").value = \"\";\n      let newGlobalMessage = {\n        from: username,\n        text: message,\n        datetime: new Date().toLocaleString()\n      };\n      socket.emit(\"send_public_message\", newGlobalMessage);\n    }\n  } // // Function that changes the pages that the app shows\n  // function changeAppState() {\n  //   setCurrentState(\"\");\n  // }\n\n  /* \r\n   * BLOCK 3\r\n   * Auxiliar FUNCTIONS\r\n  */\n\n\n  function buildTextMessage(message) {\n    if (message.username == username) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my_text_message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_message_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text_message_username\",\n          children: message.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text_messagen_datetime\",\n          children: message.datetime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_message_content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ur_text_message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_message_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text_message_username\",\n          children: message.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text_messagen_datetime\",\n          children: message.datetime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_message_content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this);\n  } // Here we build the entire app\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"header_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://logodix.com/logo/1229689.png\",\n        alt: \"messenger butterfly icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"sendertext\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat_container\",\n      children: globalChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      id: \"footer_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"input_message\",\n        placeholder: \"message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: sendPublicMessage,\n        id: \"input_submit\",\n        value: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RydulofA0SuFUaZnI9HxNdQWu4U=\");\n\n_c = App;\nexport default App;\n/*\r\nconst socket = io();\r\nconst button = document.querySelector(\"button\");\r\nconst input = document.querySelector(\"input\");\r\nconst msg = document.querySelector(\"#msg\");\r\n\r\nbutton.addEventListener(\"click\", function(e) {\r\n  const text = input.value;\r\n  //enviarselo al servidor\r\n  socket.emit(\"message_evt\", {msg: text});\r\n});\r\n\r\nsocket.on(\"message_evt\", function(message){\r\n  msg.innerHTML = message.msg;\r\n});\r\n*/\n// <main>\n//   <Routes>\n//     <Route path=\"/\" component={GlobalChat} exact />\n//     <Route path=\"/UsersConnected\" component={ConnectedUserList} />\n//     <Route path=\"/PrivateChat\" component={PrivateChat} />\n//   </Routes>\n// </main>\n// function getMessageText(e) {\n//   setMessage(e.target.value);\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Noefu/Desktop/Computacion_ubicua/SPOC_3/client/src/App.js"],"names":["useState","useEffect","useRef","io","React","ReactDOM","ReactDOMServer","GlobalChat","ConnectedUserList","PrivateChat","App","socket","setSocket","username","setUsername","globalChat","setGlobalChat","console","log","on","myUserName","newGLobalMessage","newHtmlMessage","buildTextMessage","sendPublicMessage","message","document","getElementById","value","newGlobalMessage","from","text","datetime","Date","toLocaleString","emit"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactDOMServer from \"react-dom/server\";\r\n\r\n// COMPONENTS\r\nimport GlobalChat from \"./components/ConnectedUserList\";\r\nimport ConnectedUserList from \"./components/GlobalChat\";\r\nimport PrivateChat from \"./components/PrivateChat\";\r\n\r\n\r\nfunction App() {\r\n\r\n  // const [message, setMessage] = useState(\"\");\r\n  const [socket, setSocket] = useState(setSocket(io(\"localhost:3001\")));\r\n  const [username, setUsername] = useState(\"\");\r\n  const [globalChat, setGlobalChat] = useState();\r\n  // const [currentState, setCurrentState] = useState(\"global_chat\");\r\n\r\n\r\n  useEffect(() => {\r\n    setSocket(io(\"localhost:3001\"));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"socket acaba de cambiar\");\r\n    if (socket) {\r\n      // The server returns our new username\r\n      socket.on(\"new_username\", function (myUserName) {\r\n        setUsername(myUserName);\r\n      });\r\n\r\n      // A new GLOBAL message comes from the server\r\n      socket.on(\"broadcast_public_message\", function (newGLobalMessage) {\r\n        let newHtmlMessage = buildTextMessage(newGLobalMessage);\r\n        setGlobalChat(newHtmlMessage);\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n\r\n\r\n\r\n  /* \r\n * BLOCK 1\r\n * Socket EVENT declaration\r\n*/\r\n  // // Start the comms with the server\r\n  // useEffect(() => {\r\n  //   if (socket == null) {\r\n  //     setSocket(() => {\r\n  //       return io(\"localhost:3001\");\r\n  //     });\r\n  //   }\r\n  // }, []);\r\n\r\n\r\n  /* \r\n   * BLOCK 2\r\n   * Application FUNCTIONS\r\n  */\r\n  function sendPublicMessage() {\r\n    // Extract the message from the box and clear it\r\n    let message = document.getElementById(\"input_message\").value;\r\n    if (message != \"\") {\r\n      document.getElementById(\"input_message\").value = \"\";\r\n      let newGlobalMessage = { from: username, text: message, datetime: new Date().toLocaleString() };\r\n      socket.emit(\"send_public_message\", newGlobalMessage);\r\n    }\r\n  }\r\n\r\n  // // Function that changes the pages that the app shows\r\n  // function changeAppState() {\r\n  //   setCurrentState(\"\");\r\n  // }\r\n\r\n\r\n  /* \r\n   * BLOCK 3\r\n   * Auxiliar FUNCTIONS\r\n  */\r\n  function buildTextMessage(message) {\r\n    if (message.username == username)\r\n      return (\r\n        <div className=\"my_text_message\" >\r\n          <div className=\"text_message_header\">\r\n            <p className=\"text_message_username\">{message.username}</p>\r\n            <p className=\"text_messagen_datetime\">{message.datetime}</p>\r\n          </div>\r\n          <div className=\"text_message_content\"><p>{message.text}</p></div>\r\n        </div>\r\n      );\r\n    else\r\n      return (\r\n        <div className=\"ur_text_message\" >\r\n          <div className=\"text_message_header\">\r\n            <p className=\"text_message_username\">{message.username}</p>\r\n            <p className=\"text_messagen_datetime\">{message.datetime}</p>\r\n          </div>\r\n          <div className=\"text_message_content\"><p>{message.text}</p></div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  // Here we build the entire app\r\n  return (\r\n    <div>\r\n      <header id=\"header_div\">\r\n        <img src=\"https://logodix.com/logo/1229689.png\" alt=\"messenger butterfly icon\" />\r\n        <div>\r\n          <p>sendertext</p>\r\n        </div>\r\n      </header>\r\n\r\n      <div id=\"chat_container\">{globalChat}</div>\r\n\r\n      <footer id=\"footer_div\">\r\n        <input type=\"text\" id=\"input_message\" placeholder=\"message...\" />\r\n        <input type=\"submit\" onClick={sendPublicMessage} id=\"input_submit\" value=\"&#10148;\" />\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\nconst socket = io();\r\nconst button = document.querySelector(\"button\");\r\nconst input = document.querySelector(\"input\");\r\nconst msg = document.querySelector(\"#msg\");\r\n\r\nbutton.addEventListener(\"click\", function(e) {\r\n  const text = input.value;\r\n  //enviarselo al servidor\r\n  socket.emit(\"message_evt\", {msg: text});\r\n});\r\n\r\nsocket.on(\"message_evt\", function(message){\r\n  msg.innerHTML = message.msg;\r\n});\r\n*/\r\n\r\n\r\n\r\n    // <main>\r\n    //   <Routes>\r\n    //     <Route path=\"/\" component={GlobalChat} exact />\r\n    //     <Route path=\"/UsersConnected\" component={ConnectedUserList} />\r\n    //     <Route path=\"/PrivateChat\" component={PrivateChat} />\r\n    //   </Routes>\r\n    // </main>\r\n\r\n\r\n      // function getMessageText(e) {\r\n  //   setMessage(e.target.value);\r\n  // }\r\n\r\n"]},"metadata":{},"sourceType":"module"}