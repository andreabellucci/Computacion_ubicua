{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noefu\\\\Desktop\\\\asignaturas\\\\ub\\xEDcua\\\\labs y practicas\\\\Computacion_ubicua\\\\SPOC_3\\\\client\\\\src\\\\components\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Context } from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Input() {\n  _s();\n\n  const {\n    value1,\n    value2,\n    value4,\n    value6,\n    value7,\n    value8,\n    value10\n  } = useContext(Context);\n  const [socket, setSocket] = value1;\n  const [username, setUsername] = value2;\n  const [privateMessageStack, setPrivateMessageStack] = value4;\n  const [currentView, setCurrentView] = value6;\n  const [currentPrivateChat, setCurrentPrivateChat] = value7;\n  const [newMessage, setNewMessage] = value8;\n  const [timerMessage, setTimerMessage] = useState(null);\n  const [pendingSendingMessage, setPendingSendingMessage] = value10;\n\n  function sendPublicMessage(mode) {\n    // Extract the message from the box and clear it\n    if (newMessage !== \"\") {\n      let newGlobalMessage = {\n        from: username,\n        text: newMessage,\n        datetime: new Date().toLocaleString()\n      };\n      document.getElementById(\"input_message\").value = \"\";\n      setNewMessage(\"\");\n\n      if (mode === \"normal\") {\n        socket.emit(\"broadcast_public_message\", newGlobalMessage);\n      } else if (mode === \"timer\") {\n        setPendingSendingMessage(newGlobalMessage);\n        configureMouseMove();\n        configureAccelerometer(); // Send the message in the next 5 seconds...\n\n        setTimerMessage(setTimeout(() => {\n          socket.emit(\"broadcast_public_message\", newGlobalMessage);\n          setTimerMessage(null);\n          setPendingSendingMessage(null);\n        }, 5000));\n      }\n    }\n  }\n\n  function sendPrivateMessage(mode) {\n    // Extract the message from the box and clear it\n    if (newMessage !== \"\") {\n      let newPrivateMessage = {\n        from: username,\n        to: currentPrivateChat,\n        text: newMessage,\n        datetime: new Date().toLocaleString()\n      };\n      document.getElementById(\"input_message\").value = \"\";\n      setNewMessage(\"\");\n\n      if (mode === \"normal\") {\n        socket.emit(\"send_private_message\", newPrivateMessage);\n      } else if (mode === \"timer\") {\n        setPendingSendingMessage(newPrivateMessage);\n        configureMouseMove();\n        configureAccelerometer(); // Send the message in the next 5 seconds...\n\n        setTimerMessage(setTimeout(() => {\n          socket.emit(\"send_private_message\", newPrivateMessage);\n          setPrivateMessageStack(prevMessageStack => [...prevMessageStack, newPrivateMessage]);\n          setTimerMessage(null);\n          setPendingSendingMessage(null);\n        }, 5000));\n      }\n    }\n  }\n\n  function cancelMessage() {\n    clearTimeout(timerMessage);\n    setTimerMessage(null);\n    setPendingSendingMessage(null);\n  }\n\n  function handleOnInput(e) {\n    setNewMessage(e.target.value);\n  }\n\n  function configureAccelerometer() {\n    let lastX = 0;\n    let lastY = 0;\n    let lastZ = 0;\n    let moving = false;\n    const options = {\n      threshold: 15\n    };\n\n    if ('Accelerometer' in window) {\n      try {\n        const acc = new window.Accelerometer({\n          frequency: 60\n        });\n\n        acc.onreading = () => {\n          const deltaX = Math.abs(lastX - acc.x);\n          const deltaY = Math.abs(lastY - acc.y);\n          const deltaZ = Math.abs(lastZ - acc.z);\n\n          if (deltaX > options.threshold && deltaY > options.threshold || deltaX > options.threshold && deltaZ > options.threshold || deltaY > options.threshold && deltaZ > options.threshold) {\n            if (!moving) {\n              cancelMessage();\n              moving = true;\n            }\n          } else {\n            if (moving) {\n              moving = false;\n            }\n          }\n\n          lastX = acc.x;\n          lastY = acc.y;\n          lastZ = acc.z;\n        };\n\n        acc.start();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  } // llamar a esto solo cuando se lleve a cabo en envío del mensaje de turno\n\n\n  function configureMouseMove() {\n    let lastX = 0; // let lastY = 0;\n\n    let moving = false;\n    const options = {\n      threshold: 60\n    };\n    let timeThreshold;\n    document.getElementById(\"root\").addEventListener('mousemove', e => {\n      if (lastX !== 0\n      /*&& lastY !== 0*/\n      ) {\n        const deltaX = Math.abs(lastX - e.offsetX); // const deltaY = Math.abs(lastY - e.offsetY);\n\n        if (deltaX > options.threshold\n        /*&& (deltaY > options.threshold)*/\n        ) {\n          if (!moving) {\n            cancelMessage();\n            moving = true;\n          }\n        } else {\n          if (moving) {\n            moving = false;\n          }\n        }\n      }\n\n      lastX = e.offsetX; // lastY = e.offsetY;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (currentView === \"global\" || currentView === \"private\") && /*#__PURE__*/_jsxDEV(\"footer\", {\n      id: \"footer_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onInput: handleOnInput,\n        type: \"text\",\n        id: \"input_message\",\n        placeholder: \"message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), timerMessage && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: cancelMessage,\n        className: \"input_submit\",\n        value: \"\\uD83D\\uDDD9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), currentView === \"global\" && !timerMessage && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => sendPublicMessage(\"timer\"),\n        className: \"input_submit\",\n        value: \"\\uD83D\\uDD51\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), currentView === \"private\" && !timerMessage && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => sendPrivateMessage(\"timer\"),\n        className: \"input_submit\",\n        value: \"\\uD83D\\uDD51\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), currentView === \"global\" && !timerMessage && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => sendPublicMessage(\"normal\"),\n        className: \"input_submit\",\n        value: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this), currentView === \"private\" && !timerMessage && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => sendPrivateMessage(\"normal\"),\n        className: \"input_submit\",\n        value: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"dueONZcdgq8NfTJFHHmsvsn+uPE=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/Noefu/Desktop/asignaturas/ubícua/labs y practicas/Computacion_ubicua/SPOC_3/client/src/components/Input.js"],"names":["React","useContext","useState","Context","Input","value1","value2","value4","value6","value7","value8","value10","socket","setSocket","username","setUsername","privateMessageStack","setPrivateMessageStack","currentView","setCurrentView","currentPrivateChat","setCurrentPrivateChat","newMessage","setNewMessage","timerMessage","setTimerMessage","pendingSendingMessage","setPendingSendingMessage","sendPublicMessage","mode","newGlobalMessage","from","text","datetime","Date","toLocaleString","document","getElementById","value","emit","configureMouseMove","configureAccelerometer","setTimeout","sendPrivateMessage","newPrivateMessage","to","prevMessageStack","cancelMessage","clearTimeout","handleOnInput","e","target","lastX","lastY","lastZ","moving","options","threshold","window","acc","Accelerometer","frequency","onreading","deltaX","Math","abs","x","deltaY","y","deltaZ","z","start","err","console","log","timeThreshold","addEventListener","offsetX"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Context } from \"./Context\";\r\n\r\nexport default function Input() {\r\n\r\n  const { value1, value2, value4, value6, value7, value8, value10 } = useContext(Context);\r\n  const [socket, setSocket] = value1;\r\n  const [username, setUsername] = value2;\r\n  const [privateMessageStack, setPrivateMessageStack] = value4;\r\n  const [currentView, setCurrentView] = value6;\r\n  const [currentPrivateChat, setCurrentPrivateChat] = value7;\r\n  const [newMessage, setNewMessage] = value8;\r\n  const [timerMessage, setTimerMessage] = useState(null);\r\n  const [pendingSendingMessage, setPendingSendingMessage] = value10;\r\n\r\n\r\n  function sendPublicMessage(mode) {\r\n    // Extract the message from the box and clear it\r\n    if (newMessage !== \"\") {\r\n      let newGlobalMessage = { from: username, text: newMessage, datetime: new Date().toLocaleString() };\r\n      document.getElementById(\"input_message\").value = \"\";\r\n      setNewMessage(\"\");\r\n\r\n      if (mode === \"normal\") {\r\n        socket.emit(\"broadcast_public_message\", newGlobalMessage);\r\n      } else if (mode === \"timer\") {\r\n\r\n        setPendingSendingMessage(newGlobalMessage);\r\n        configureMouseMove();\r\n        configureAccelerometer();\r\n\r\n        // Send the message in the next 5 seconds...\r\n        setTimerMessage(setTimeout(() => {\r\n          socket.emit(\"broadcast_public_message\", newGlobalMessage);\r\n          setTimerMessage(null);\r\n          setPendingSendingMessage(null);\r\n        }, 5000));\r\n      }\r\n    }\r\n  }\r\n\r\n  function sendPrivateMessage(mode) {\r\n    // Extract the message from the box and clear it\r\n    if (newMessage !== \"\") {\r\n      let newPrivateMessage = { from: username, to: currentPrivateChat, text: newMessage, datetime: new Date().toLocaleString() };\r\n      document.getElementById(\"input_message\").value = \"\";\r\n      setNewMessage(\"\");\r\n\r\n      if (mode === \"normal\") {\r\n        socket.emit(\"send_private_message\", newPrivateMessage);\r\n      } else if (mode === \"timer\") {\r\n\r\n        setPendingSendingMessage(newPrivateMessage);\r\n        configureMouseMove();\r\n        configureAccelerometer();\r\n\r\n        // Send the message in the next 5 seconds...\r\n        setTimerMessage(setTimeout(() => {\r\n          socket.emit(\"send_private_message\", newPrivateMessage);\r\n          setPrivateMessageStack((prevMessageStack) => [...prevMessageStack, newPrivateMessage]);\r\n          setTimerMessage(null);\r\n          setPendingSendingMessage(null);\r\n        }, 5000));\r\n      }\r\n    }\r\n  }\r\n\r\n  function cancelMessage() {\r\n    clearTimeout(timerMessage);\r\n    setTimerMessage(null);\r\n    setPendingSendingMessage(null);\r\n  }\r\n\r\n  function handleOnInput(e) {\r\n    setNewMessage(e.target.value);\r\n  }\r\n\r\n  function configureAccelerometer() {\r\n\r\n    let lastX = 0;\r\n    let lastY = 0;\r\n    let lastZ = 0;\r\n\r\n    let moving = false;\r\n\r\n    const options = {\r\n      threshold: 15\r\n    };\r\n\r\n\r\n    if ('Accelerometer' in window) {\r\n      try {\r\n        const acc = new window.Accelerometer({ frequency: 60 });\r\n\r\n        acc.onreading = () => {\r\n          const deltaX = Math.abs(lastX - acc.x);\r\n          const deltaY = Math.abs(lastY - acc.y);\r\n          const deltaZ = Math.abs(lastZ - acc.z);\r\n\r\n          if (((deltaX > options.threshold) && (deltaY > options.threshold)) ||\r\n            ((deltaX > options.threshold) && (deltaZ > options.threshold)) ||\r\n            ((deltaY > options.threshold) && (deltaZ > options.threshold))\r\n          ) {\r\n            if (!moving) {\r\n              cancelMessage();\r\n              moving = true;\r\n            }\r\n          } else {\r\n            if (moving) {\r\n              moving = false;\r\n            }\r\n          }\r\n\r\n          lastX = acc.x;\r\n          lastY = acc.y;\r\n          lastZ = acc.z;\r\n\r\n        }\r\n\r\n        acc.start();\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  // llamar a esto solo cuando se lleve a cabo en envío del mensaje de turno\r\n  function configureMouseMove() {\r\n\r\n    let lastX = 0;\r\n    // let lastY = 0;\r\n\r\n    let moving = false;\r\n\r\n    const options = {\r\n      threshold: 60\r\n    };\r\n\r\n    let timeThreshold;\r\n\r\n\r\n    document.getElementById(\"root\").addEventListener('mousemove', e => {\r\n\r\n      if (lastX !== 0 /*&& lastY !== 0*/) {\r\n        const deltaX = Math.abs(lastX - e.offsetX);\r\n        // const deltaY = Math.abs(lastY - e.offsetY);\r\n\r\n        if ((deltaX > options.threshold) /*&& (deltaY > options.threshold)*/) {\r\n          if (!moving) {\r\n            cancelMessage();\r\n            moving = true;\r\n          }\r\n        } else {\r\n          if (moving) {\r\n            moving = false;\r\n          }\r\n        }\r\n      }\r\n\r\n      lastX = e.offsetX;\r\n      // lastY = e.offsetY;\r\n\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {(currentView === \"global\" || currentView === \"private\") &&\r\n        <footer id=\"footer_div\">\r\n          <input onInput={handleOnInput} type=\"text\" id=\"input_message\" placeholder=\"message...\" />\r\n          {timerMessage &&\r\n            <input type=\"submit\" onClick={cancelMessage} className=\"input_submit\" value=\"&#128473;\" />\r\n          }\r\n          {currentView === \"global\" && !timerMessage &&\r\n            <input type=\"submit\" onClick={() => sendPublicMessage(\"timer\")} className=\"input_submit\" value=\"&#128337;\" />\r\n          }\r\n          {currentView === \"private\" && !timerMessage &&\r\n            < input type=\"submit\" onClick={() => sendPrivateMessage(\"timer\")} className=\"input_submit\" value=\"&#128337;\" />\r\n          }\r\n\r\n          {currentView === \"global\" && !timerMessage &&\r\n            < input type=\"submit\" onClick={() => sendPublicMessage(\"normal\")} className=\"input_submit\" value=\"&#10148;\" />\r\n          }\r\n          {currentView === \"private\" && !timerMessage &&\r\n            < input type=\"submit\" onClick={() => sendPrivateMessage(\"normal\")} className=\"input_submit\" value=\"&#10148;\" />\r\n          }\r\n        </footer>\r\n      }\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}