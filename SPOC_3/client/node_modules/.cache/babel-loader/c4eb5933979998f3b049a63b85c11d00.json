{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noefu\\\\Desktop\\\\asignaturas\\\\ub\\xEDcua\\\\labs y practicas\\\\Computacion_ubicua\\\\SPOC_3\\\\client\\\\src\\\\components\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Context } from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Input() {\n  _s();\n\n  const {\n    value1,\n    value2,\n    value4,\n    value6,\n    value7,\n    value8\n  } = useContext(Context);\n  const [socket, setSocket] = value1;\n  const [username, setUsername] = value2;\n  const [privateMessageStack, setPrivateMessageStack] = value4;\n  const [currentView, setCurrentView] = value6;\n  const [currentPrivateChat, setCurrentPrivateChat] = value7;\n  const [newMessage, setNewMessage] = value8;\n\n  function sendPublicMessage(mode) {\n    // Extract the message from the box and clear it\n    if (newMessage !== \"\") {\n      let newGlobalMessage = {\n        from: username,\n        text: newMessage,\n        datetime: new Date().toLocaleString()\n      };\n      socket.emit(\"broadcast_public_message\", newGlobalMessage);\n      document.getElementById(\"input_message\").value = \"\";\n      setNewMessage(\"\");\n    }\n  }\n\n  function sendPrivateMessage(mode) {\n    // Extract the message from the box and clear it\n    if (newMessage !== \"\") {\n      let newPrivateMessage = {\n        from: username,\n        to: currentPrivateChat,\n        text: newMessage,\n        datetime: new Date().toLocaleString()\n      };\n      socket.emit(\"send_private_message\", newPrivateMessage);\n      setPrivateMessageStack(prevMessageStack => [...prevMessageStack, newPrivateMessage]);\n      document.getElementById(\"input_message\").value = \"\";\n      setNewMessage(\"\");\n    }\n  }\n\n  function handleOnInput(e) {\n    setNewMessage(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (currentView === \"global\" || currentView === \"private\") && /*#__PURE__*/_jsxDEV(\"footer\", {\n      id: \"footer_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onInput: handleOnInput,\n        type: \"text\",\n        id: \"input_message\",\n        placeholder: \"message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), currentView === \"global\" && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => sendPublicMessage(\"timer\"),\n        class: \"input_submit\",\n        value: \"\\uD83D\\uDD51\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), currentView === \"private\" && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => sendPrivateMessage(\"timer\"),\n        class: \"input_submit\",\n        value: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), currentView === \"global\" && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => sendPublicMessage(\"normal\"),\n        class: \"input_submit\",\n        value: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), currentView === \"private\" && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => sendPrivateMessage(\"normal\"),\n        class: \"input_submit\",\n        value: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"88UK36iWM0nevTJxMUUE6VDa2YA=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/Noefu/Desktop/asignaturas/ubÃ­cua/labs y practicas/Computacion_ubicua/SPOC_3/client/src/components/Input.js"],"names":["React","useContext","Context","Input","value1","value2","value4","value6","value7","value8","socket","setSocket","username","setUsername","privateMessageStack","setPrivateMessageStack","currentView","setCurrentView","currentPrivateChat","setCurrentPrivateChat","newMessage","setNewMessage","sendPublicMessage","mode","newGlobalMessage","from","text","datetime","Date","toLocaleString","emit","document","getElementById","value","sendPrivateMessage","newPrivateMessage","to","prevMessageStack","handleOnInput","e","target"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Context } from \"./Context\";\r\n\r\nexport default function Input() {\r\n\r\n  const { value1, value2, value4, value6, value7, value8 } = useContext(Context);\r\n  const [socket, setSocket] = value1;\r\n  const [username, setUsername] = value2;\r\n  const [privateMessageStack, setPrivateMessageStack] = value4;\r\n  const [currentView, setCurrentView] = value6;\r\n  const [currentPrivateChat, setCurrentPrivateChat] = value7;\r\n  const [newMessage, setNewMessage] = value8;\r\n\r\n  function sendPublicMessage(mode) {\r\n    // Extract the message from the box and clear it\r\n    if (newMessage !== \"\") {\r\n      let newGlobalMessage = { from: username, text: newMessage, datetime: new Date().toLocaleString() };\r\n      socket.emit(\"broadcast_public_message\", newGlobalMessage);\r\n      document.getElementById(\"input_message\").value = \"\";\r\n      setNewMessage(\"\");\r\n    }\r\n  }\r\n\r\n  function sendPrivateMessage(mode) {\r\n    // Extract the message from the box and clear it\r\n    if (newMessage !== \"\") {\r\n      let newPrivateMessage = { from: username, to: currentPrivateChat, text: newMessage, datetime: new Date().toLocaleString() };\r\n      socket.emit(\"send_private_message\", newPrivateMessage);\r\n      setPrivateMessageStack((prevMessageStack) => [...prevMessageStack, newPrivateMessage]);\r\n      document.getElementById(\"input_message\").value = \"\";\r\n      setNewMessage(\"\");\r\n    }\r\n  }\r\n\r\n  function handleOnInput(e) {\r\n    setNewMessage(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {(currentView === \"global\" || currentView === \"private\") &&\r\n        <footer id=\"footer_div\">\r\n          <input onInput={handleOnInput} type=\"text\" id=\"input_message\" placeholder=\"message...\" />\r\n\r\n          {currentView === \"global\" &&\r\n            <input type=\"submit\" onClick={() => sendPublicMessage(\"timer\")} class=\"input_submit\" value=\"&#128337;\" />\r\n          }\r\n          {currentView === \"private\" &&\r\n            <input type=\"submit\" onClick={() => sendPrivateMessage(\"timer\")} class=\"input_submit\" value=\"&#10148;\" />\r\n          }\r\n\r\n          {currentView === \"global\" &&\r\n            <input type=\"submit\" onClick={() => sendPublicMessage(\"normal\")} class=\"input_submit\" value=\"&#10148;\" />\r\n          }\r\n          {currentView === \"private\" &&\r\n            <input type=\"submit\" onClick={() => sendPrivateMessage(\"normal\")} class=\"input_submit\" value=\"&#10148;\" />\r\n          }\r\n        </footer>\r\n      }\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}