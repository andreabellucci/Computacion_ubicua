{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noefu\\\\Desktop\\\\asignaturas\\\\ub\\xEDcua\\\\labs y practicas\\\\Computacion_ubicua\\\\SPOC_3\\\\client\\\\src\\\\components\\\\Challenge.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Context } from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Challenge() {\n  _s();\n\n  const {\n    value1,\n    value9,\n    value11\n  } = useContext(Context);\n  const [challenge, setChallenge] = value9;\n  const [socket, setSocket] = value1;\n  const [arrayShuffledQuestions, setArrayShuffledQuestions] = value11;\n\n  function sendChallengeAnswer(answer) {\n    socket.emit(\"user_send_response\", challenge.correct_answer === answer ? true : false);\n    setChallenge(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: challenge && arrayShuffledQuestions && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"challenge\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: challenge.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), arrayShuffledQuestions.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => sendChallengeAnswer(val),\n          children: val\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Challenge, \"Sfk0SOTWZ+za1ck/O6LfP7nFC9E=\");\n\n_c = Challenge;\n\nvar _c;\n\n$RefreshReg$(_c, \"Challenge\");","map":{"version":3,"sources":["C:/Users/Noefu/Desktop/asignaturas/ub√≠cua/labs y practicas/Computacion_ubicua/SPOC_3/client/src/components/Challenge.js"],"names":["React","useContext","useState","Context","Challenge","value1","value9","value11","challenge","setChallenge","socket","setSocket","arrayShuffledQuestions","setArrayShuffledQuestions","sendChallengeAnswer","answer","emit","correct_answer","question","map","val","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAElC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,MAA8BN,UAAU,CAACE,OAAD,CAA9C;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BH,MAAlC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBN,MAA5B;AACA,QAAM,CAACO,sBAAD,EAAyBC,yBAAzB,IAAsDN,OAA5D;;AAEA,WAASO,mBAAT,CAA6BC,MAA7B,EAAqC;AACnCL,IAAAA,MAAM,CAACM,IAAP,CAAY,oBAAZ,EAAmCR,SAAS,CAACS,cAAV,KAA6BF,MAA7B,GAAsC,IAAtC,GAA6C,KAAhF;AACAN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAGD,sBACE;AAAA,cACGD,SAAS,IAAII,sBAAb,iBACC;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACE;AAAA,kBAAKJ,SAAS,CAACU;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,EAEGN,sBAAsB,CAACO,GAAvB,CAA2B,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxC,4BAAO;AAAG,UAAA,OAAO,EAAE,MAAMP,mBAAmB,CAACM,GAAD,CAArC;AAAA,oBAAuDA;AAAvD,WAAiDC,GAAjD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAzBuBjB,S;;KAAAA,S","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Context } from \"./Context\";\r\n\r\nexport default function Challenge() {\r\n\r\n  const { value1, value9, value11 } = useContext(Context);\r\n  const [challenge, setChallenge] = value9;\r\n  const [socket, setSocket] = value1;\r\n  const [arrayShuffledQuestions, setArrayShuffledQuestions] = value11;\r\n\r\n  function sendChallengeAnswer(answer) {\r\n    socket.emit(\"user_send_response\", (challenge.correct_answer === answer ? true : false));\r\n    setChallenge(null);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {challenge && arrayShuffledQuestions &&\r\n        <div id=\"challenge\">\r\n          <h2>{challenge.question}</h2>\r\n          {arrayShuffledQuestions.map((val, key) => {\r\n            return <p onClick={() => sendChallengeAnswer(val)} key={key}>{val}</p>;\r\n          })}\r\n        </div>\r\n      }\r\n    </div >\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}