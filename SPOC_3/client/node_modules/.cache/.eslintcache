[{"C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\index.js":"1","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\App.js":"3","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\GlobalChat.js":"4","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\PrivateChat.js":"5","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\ConnectedUserList.js":"6","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\Context.js":"7","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\Header.js":"8","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\Challenge.js":"9","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\Input.js":"10"},{"size":517,"mtime":1636971373393,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1636971373393,"results":"13","hashOfConfig":"12"},{"size":3316,"mtime":1637001470234,"results":"14","hashOfConfig":"12"},{"size":1020,"mtime":1637001238396,"results":"15","hashOfConfig":"12"},{"size":1708,"mtime":1637001444347,"results":"16","hashOfConfig":"12"},{"size":1399,"mtime":1637001190735,"results":"17","hashOfConfig":"12"},{"size":75,"mtime":1636991655334,"results":"18","hashOfConfig":"12"},{"size":1219,"mtime":1637000746928,"results":"19","hashOfConfig":"12"},{"size":757,"mtime":1636998455866,"results":"20","hashOfConfig":"12"},{"size":2066,"mtime":1636999666429,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"xyx9cn",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"24"},"C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\index.js",[],["50","51"],"C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\App.js",["52"],"import \"./App.css\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport React from \"react\";\r\n\r\n\r\n// COMPONENTS\r\nimport { Context } from \"./components/Context\";\r\nimport Challenge from \"./components/Challenge\";\r\nimport Header from \"./components/Header\";\r\nimport ConnectedUserList from \"./components/ConnectedUserList\";\r\nimport GlobalChat from \"./components/GlobalChat\";\r\nimport PrivateChat from \"./components/PrivateChat\";\r\nimport Input from \"./components/Input\";\r\n\r\n\r\nconst generator = require('project-name-generator');\r\n\r\nexport default function App() {\r\n\r\n  /* \r\n  * BLOCK 1\r\n  * Constants\r\n  */\r\n  const [socket, setSocket] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [publicMessageStack, setPublicMessageStack] = useState([]);\r\n  const [privateMessageStack, setPrivateMessageStack] = useState([]);\r\n  const [connectedUserList, setConnectedUserList] = useState([]);\r\n  const [currentView, setCurrentView] = useState(\"global\"); // global, private, users\r\n  const [currentPrivateChat, setCurrentPrivateChat] = useState(\"\"); // Who you're talking in private at the moment\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [challenge, setChallenge] = useState(null);\r\n\r\n\r\n  /* \r\n  * BLOCK 2\r\n  * Socket EVENT declaration\r\n  */\r\n  useEffect(() => {\r\n    const socket = io(\"localhost:3001\");\r\n\r\n    // When the socket connects to the server\r\n    socket.on(\"connect\", () => {\r\n      const newUserName = generator({ words: 2, number: false }).dashed;\r\n      setUsername(newUserName);\r\n      socket.emit(\"register_user\", newUserName);\r\n    });\r\n\r\n    // A new GLOBAL message comes from the server\r\n    socket.on(\"deliver_public_message\", (message) => {\r\n      setPublicMessageStack((prevMessageStack) => [...prevMessageStack, message]);\r\n    });\r\n\r\n    // A new PRIVATE message comes from the server\r\n    socket.on(\"deliver_private_message\", (message) => {\r\n      console.log(\"new message!!!!!\");\r\n      console.log(message);\r\n      setPrivateMessageStack((prevMessageStack) => [...prevMessageStack, message]);\r\n    });\r\n\r\n    // The updated user connected list arrives\r\n    socket.on(\"update_connected_users_list\", (userList) => {\r\n      setConnectedUserList(userList);\r\n    });\r\n\r\n    // The server challenge us\r\n    socket.on(\"server_challenge\", (challenge) => {\r\n      setChallenge(challenge);\r\n    });\r\n\r\n    // The server force-disconnect us\r\n    socket.on(\"disconnect_user\", () => {\r\n      socket.disconnect();\r\n    });\r\n\r\n    setSocket(socket);\r\n  }, []);\r\n\r\n\r\n  /* \r\n  * BLOCK 3\r\n  * App build\r\n  */\r\n  return (\r\n    <div>\r\n      <Context.Provider value={{\r\n        value1: [socket, setSocket],\r\n        value2: [username, setUsername],\r\n        value3: [publicMessageStack, setPublicMessageStack],\r\n        value4: [privateMessageStack, setPrivateMessageStack],\r\n        value5: [connectedUserList, setConnectedUserList],\r\n        value6: [currentView, setCurrentView],\r\n        value7: [currentPrivateChat, setCurrentPrivateChat],\r\n        value8: [newMessage, setNewMessage],\r\n        value9: [challenge, setChallenge]\r\n      }}>\r\n        <Challenge />\r\n        <Header />\r\n        <GlobalChat />\r\n        <ConnectedUserList />\r\n        <PrivateChat />\r\n        <Input />\r\n      </Context.Provider>\r\n    </div >\r\n  );\r\n}","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\GlobalChat.js",["53","54","55"],"import React, { useContext } from \"react\";\r\n\r\nimport { Context } from \"./Context\";\r\n\r\nexport default function GlobalChat() {\r\n\r\n  const { value2, value3, value6 } = useContext(Context);\r\n  const [username, setUsername] = value2;\r\n  const [publicMessageStack, setPublicMessageStack] = value3;\r\n  const [currentView, setCurrentView] = value6;\r\n\r\n  return (\r\n    <div>\r\n      {currentView === \"global\" &&\r\n        <div id=\"chat_container\">\r\n          {publicMessageStack.map((msg, key) => {\r\n            return (\r\n              <div key={key} className={username === msg.from ? 'my_text_message' : 'ur_text_message'}>\r\n                <div className=\"text_message_header\">\r\n                  <p className=\"text_message_username\">{msg.from}</p>\r\n                  <p className=\"text_messagen_datetime\">{msg.datetime}</p>\r\n                </div>\r\n                <div className=\"text_message_content\"><p>{msg.text}</p></div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\PrivateChat.js",["56","57","58","59","60"],"import React, { useContext } from \"react\";\r\n\r\nimport { Context } from \"./Context\";\r\n\r\nexport default function PrivateChat() {\r\n\r\n  const { value2, value4, value6, value7 } = useContext(Context);\r\n  const [username, setUsername] = value2;\r\n  const [privateMessageStack, setPrivateMessageStack] = value4;\r\n  const [currentView, setCurrentView] = value6;\r\n  const [currentPrivateChat, setCurrentPrivateChat] = value7;\r\n\r\n  return (\r\n    <div>\r\n      {currentView === \"private\" &&\r\n        <div id=\"chat_container\">\r\n          {privateMessageStack.map((msg, key) => {\r\n            if (msg.from === currentPrivateChat && msg.to === username) {\r\n              return (\r\n                <div key={key} className='ur_text_message'>\r\n                  <div className=\"text_message_header\">\r\n                    <p className=\"text_message_username\">{msg.from}</p>\r\n                    <p className=\"text_messagen_datetime\">{msg.datetime}</p>\r\n                  </div>\r\n                  <div className=\"text_message_content\"><p>{msg.text}</p></div>\r\n                </div>\r\n              );\r\n            } else if (msg.from === username && msg.to === currentPrivateChat) {\r\n              return (\r\n                <div key={key} className='my_text_message'>\r\n                  <div className=\"text_message_header\">\r\n                    <p className=\"text_message_username\">{msg.from}</p>\r\n                    <p className=\"text_messagen_datetime\">{msg.datetime}</p>\r\n                  </div>\r\n                  <div className=\"text_message_content\"><p>{msg.text}</p></div>\r\n                </div>\r\n              );\r\n            } else\r\n              return;\r\n          })}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\ConnectedUserList.js",["61","62","63"],"import React, { useContext } from \"react\";\r\n\r\nimport { Context } from \"./Context\";\r\n\r\nexport default function ConnectedUserList() {\r\n\r\n  const { value2, value5, value6, value7 } = useContext(Context);\r\n  const [username, setUsername] = value2;\r\n  const [connectedUserList, setConnectedUserList] = value5;\r\n  const [currentPrivateChat, setCurrentPrivateChat] = value7;\r\n  const [currentView, setCurrentView] = value6;\r\n\r\n  function changePrivateChat(user) {\r\n    setCurrentPrivateChat(user);\r\n    setCurrentView(\"private\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {currentView === \"users\" &&\r\n        <div>\r\n          <div id=\"connected_users\">\r\n            {connectedUserList.map((val, key) => {\r\n              if (username !== val.username) {\r\n                return (\r\n                  <div key={key} className=\"connected_user_container\" onClick={() => changePrivateChat(val.username)}>\r\n                    <img\r\n                      src=\"https://img.utdstc.com/icon/9a8/867/9a8867eb77f8a20e62b5ea69f900de7c650546db544a00ce042d66945fd987bb:200\"\r\n                      alt=\"messenger butterfly icon\" />\r\n                    <div>\r\n                      <p>{val.username}</p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else\r\n                return <div key={key}></div>;\r\n            })}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\Context.js",[],"C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\Header.js",["64"],"import React, { useContext } from \"react\";\r\n\r\nimport { Context } from \"./Context\";\r\n\r\n\r\nexport default function Header() {\r\n\r\n  const { value6, value7 } = useContext(Context);\r\n  const [currentPrivateChat, setCurrentPrivateChat] = value7;\r\n  const [currentView, setCurrentView] = value6;\r\n\r\n  return (\r\n    <header id=\"header_div\">\r\n      <div>\r\n        <img src=\"https://logodix.com/logo/1229689.png\" alt=\"msn butterfly icon\" />\r\n        <div>\r\n          {currentView === \"global\" &&\r\n            <p>Global Chat</p>\r\n          }\r\n          {currentView === \"users\" &&\r\n            <p>User List</p>\r\n          }\r\n          {currentView === \"private\" &&\r\n            <p>{currentPrivateChat}</p>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div id=\"header_redirection\">\r\n        <img onClick={() => setCurrentView(\"global\")} src=\"https://cdn-icons-png.flaticon.com/512/139/139706.png\" alt=\"GlobalChat\" />\r\n        <img onClick={() => setCurrentView(\"users\")} src=\"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\" alt=\"UserList\" />\r\n        <img onClick={() => setCurrentView(\"private\")} src=\"https://cdn-icons-png.flaticon.com/512/1041/1041916.png\" alt=\"PrivateChat\" />\r\n      </div>\r\n    </header>\r\n  );\r\n}","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\Challenge.js",["65"],"import React, { useContext } from \"react\";\r\nimport { Context } from \"./Context\";\r\n\r\nexport default function Challenge() {\r\n\r\n  const { value1, value9 } = useContext(Context);\r\n  const [challenge, setChallenge] = value9;\r\n  const [socket, setSocket] = value1;\r\n\r\n  function sendChallengeAnswer(answer) {\r\n    socket.emit(\"user_send_response\", answer);\r\n    setChallenge(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {challenge &&\r\n        <div id=\"challenge\">\r\n          <h2>{challenge.question}</h2>\r\n          <div id=\"challenge_answers\">\r\n            {challenge.answers.map((val, key) => {\r\n              return <p onClick={() => sendChallengeAnswer(val)} key={key}>{val}</p>;\r\n            })}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}","C:\\Users\\Noefu\\Desktop\\asignaturas\\ubícua\\labs y practicas\\Computacion_ubicua\\SPOC_3\\client\\src\\components\\Input.js",["66","67","68","69","70"],"import React, { useContext } from \"react\";\r\nimport { Context } from \"./Context\";\r\n\r\nexport default function Input() {\r\n\r\n  const { value1, value2, value4, value6, value7, value8 } = useContext(Context);\r\n  const [socket, setSocket] = value1;\r\n  const [username, setUsername] = value2;\r\n  const [privateMessageStack, setPrivateMessageStack] = value4;\r\n  const [currentView, setCurrentView] = value6;\r\n  const [currentPrivateChat, setCurrentPrivateChat] = value7;\r\n  const [newMessage, setNewMessage] = value8;\r\n\r\n  function sendPublicMessage() {\r\n    // Extract the message from the box and clear it\r\n    if (newMessage !== \"\") {\r\n      let newGlobalMessage = { from: username, text: newMessage, datetime: new Date().toLocaleString() };\r\n      socket.emit(\"broadcast_public_message\", newGlobalMessage);\r\n      document.getElementById(\"input_message\").value = \"\";\r\n      setNewMessage(\"\");\r\n    }\r\n  }\r\n\r\n  function sendPrivateMessage() {\r\n    // Extract the message from the box and clear it\r\n    if (newMessage !== \"\") {\r\n      let newPrivateMessage = { from: username, to: currentPrivateChat, text: newMessage, datetime: new Date().toLocaleString() };\r\n      socket.emit(\"send_private_message\", newPrivateMessage);\r\n      setPrivateMessageStack((prevMessageStack) => [...prevMessageStack, newPrivateMessage]);\r\n      document.getElementById(\"input_message\").value = \"\";\r\n      setNewMessage(\"\");\r\n    }\r\n  }\r\n\r\n  function handleOnInput(e) {\r\n    setNewMessage(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {(currentView === \"global\" || currentView === \"private\") &&\r\n        <footer id=\"footer_div\">\r\n          <input onInput={handleOnInput} type=\"text\" id=\"input_message\" placeholder=\"message...\" />\r\n          {currentView === \"global\" &&\r\n            <input type=\"submit\" onClick={sendPublicMessage} id=\"input_submit\" value=\"&#10148;\" />\r\n          }\r\n          {currentView === \"private\" &&\r\n            <input type=\"submit\" onClick={sendPrivateMessage} id=\"input_submit\" value=\"&#10148;\" />\r\n          }\r\n        </footer>\r\n      }\r\n    </div>\r\n  );\r\n}",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":31,"nodeType":"77","messageId":"78","endLine":2,"endColumn":37},{"ruleId":"75","severity":1,"message":"79","line":8,"column":20,"nodeType":"77","messageId":"78","endLine":8,"endColumn":31},{"ruleId":"75","severity":1,"message":"80","line":9,"column":30,"nodeType":"77","messageId":"78","endLine":9,"endColumn":51},{"ruleId":"75","severity":1,"message":"81","line":10,"column":23,"nodeType":"77","messageId":"78","endLine":10,"endColumn":37},{"ruleId":"75","severity":1,"message":"79","line":8,"column":20,"nodeType":"77","messageId":"78","endLine":8,"endColumn":31},{"ruleId":"75","severity":1,"message":"82","line":9,"column":31,"nodeType":"77","messageId":"78","endLine":9,"endColumn":53},{"ruleId":"75","severity":1,"message":"81","line":10,"column":23,"nodeType":"77","messageId":"78","endLine":10,"endColumn":37},{"ruleId":"75","severity":1,"message":"83","line":11,"column":30,"nodeType":"77","messageId":"78","endLine":11,"endColumn":51},{"ruleId":"84","severity":1,"message":"85","line":39,"column":15,"nodeType":"86","messageId":"87","endLine":39,"endColumn":22},{"ruleId":"75","severity":1,"message":"79","line":8,"column":20,"nodeType":"77","messageId":"78","endLine":8,"endColumn":31},{"ruleId":"75","severity":1,"message":"88","line":9,"column":29,"nodeType":"77","messageId":"78","endLine":9,"endColumn":49},{"ruleId":"75","severity":1,"message":"89","line":10,"column":10,"nodeType":"77","messageId":"78","endLine":10,"endColumn":28},{"ruleId":"75","severity":1,"message":"83","line":9,"column":30,"nodeType":"77","messageId":"78","endLine":9,"endColumn":51},{"ruleId":"75","severity":1,"message":"90","line":8,"column":18,"nodeType":"77","messageId":"78","endLine":8,"endColumn":27},{"ruleId":"75","severity":1,"message":"90","line":7,"column":18,"nodeType":"77","messageId":"78","endLine":7,"endColumn":27},{"ruleId":"75","severity":1,"message":"79","line":8,"column":20,"nodeType":"77","messageId":"78","endLine":8,"endColumn":31},{"ruleId":"75","severity":1,"message":"91","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":29},{"ruleId":"75","severity":1,"message":"81","line":10,"column":23,"nodeType":"77","messageId":"78","endLine":10,"endColumn":37},{"ruleId":"75","severity":1,"message":"83","line":11,"column":30,"nodeType":"77","messageId":"78","endLine":11,"endColumn":51},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'setUsername' is assigned a value but never used.","'setPublicMessageStack' is assigned a value but never used.","'setCurrentView' is assigned a value but never used.","'setPrivateMessageStack' is assigned a value but never used.","'setCurrentPrivateChat' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'setConnectedUserList' is assigned a value but never used.","'currentPrivateChat' is assigned a value but never used.","'setSocket' is assigned a value but never used.","'privateMessageStack' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]