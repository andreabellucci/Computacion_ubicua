{"ast":null,"code":"const _ = require('lodash');\n\nconst nouns = require('./nouns');\n\nconst adjectives = require('./adjectives');\n\nmodule.exports = generate;\ngenerate.generate = generate;\n\nfunction generate(options) {\n  var defaults = {\n    number: false,\n    words: 2,\n    alliterative: false\n  };\n  options = _.merge(defaults, options || {});\n  var raw = getRawProjName(options);\n  return {\n    raw: raw,\n    dashed: raw.join('-'),\n    spaced: raw.join(' ')\n  };\n}\n\nfunction getRawProjName(options) {\n  var raw = [];\n\n  _.times(options.words - 1, function () {\n    if (options.alliterative && raw.length) raw.push(_.sample(getAlliterativeMatches(adjectives, raw[0].substring(0, 1))));else raw.push(_.sample(adjectives).toLowerCase());\n  });\n\n  if (options.alliterative) raw.push(_.sample(getAlliterativeMatches(nouns, raw[0].substring(0, 1))));else raw.push(_.sample(nouns).toLowerCase());\n\n  if (options.number) {\n    raw.push(_.random(1, 9999));\n  }\n\n  return raw;\n}\n\nfunction getAlliterativeMatches(arr, letter) {\n  var check = letter.toLowerCase();\n  return _.filter(arr, function (elm) {\n    return elm.substring(0, 1).toLowerCase() === check;\n  });\n}","map":{"version":3,"sources":["C:/Users/Noefu/Desktop/asignaturas/ub√≠cua/labs y practicas/Computacion_ubicua/SPOC_3/client/node_modules/project-name-generator/src/generator.js"],"names":["_","require","nouns","adjectives","module","exports","generate","options","defaults","number","words","alliterative","merge","raw","getRawProjName","dashed","join","spaced","times","length","push","sample","getAlliterativeMatches","substring","toLowerCase","random","arr","letter","check","filter","elm"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,cAAD,CAA1B;;AAGAG,MAAM,CAACC,OAAP,GAAiBC,QAAjB;AAEAA,QAAQ,CAACA,QAAT,GAAoBA,QAApB;;AACA,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,MAAIC,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAE,KADK;AAEbC,IAAAA,KAAK,EAAE,CAFM;AAGbC,IAAAA,YAAY,EAAE;AAHD,GAAf;AAKAJ,EAAAA,OAAO,GAAGP,CAAC,CAACY,KAAF,CAAQJ,QAAR,EAAkBD,OAAO,IAAI,EAA7B,CAAV;AAEA,MAAIM,GAAG,GAAGC,cAAc,CAACP,OAAD,CAAxB;AAEA,SAAO;AACLM,IAAAA,GAAG,EAAEA,GADA;AAELE,IAAAA,MAAM,EAAEF,GAAG,CAACG,IAAJ,CAAS,GAAT,CAFH;AAGLC,IAAAA,MAAM,EAAEJ,GAAG,CAACG,IAAJ,CAAS,GAAT;AAHH,GAAP;AAKD;;AAED,SAASF,cAAT,CAAwBP,OAAxB,EAAiC;AAC/B,MAAIM,GAAG,GAAG,EAAV;;AACAb,EAAAA,CAAC,CAACkB,KAAF,CAAQX,OAAO,CAACG,KAAR,GAAgB,CAAxB,EAA2B,YAAY;AACrC,QAAIH,OAAO,CAACI,YAAR,IAAwBE,GAAG,CAACM,MAAhC,EACEN,GAAG,CAACO,IAAJ,CAASpB,CAAC,CAACqB,MAAF,CAASC,sBAAsB,CAACnB,UAAD,EAAaU,GAAG,CAAC,CAAD,CAAH,CAAOU,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAb,CAA/B,CAAT,EADF,KAGEV,GAAG,CAACO,IAAJ,CAASpB,CAAC,CAACqB,MAAF,CAASlB,UAAT,EAAqBqB,WAArB,EAAT;AACH,GALD;;AAOA,MAAIjB,OAAO,CAACI,YAAZ,EACEE,GAAG,CAACO,IAAJ,CAASpB,CAAC,CAACqB,MAAF,CAASC,sBAAsB,CAACpB,KAAD,EAAQW,GAAG,CAAC,CAAD,CAAH,CAAOU,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAR,CAA/B,CAAT,EADF,KAGEV,GAAG,CAACO,IAAJ,CAASpB,CAAC,CAACqB,MAAF,CAASnB,KAAT,EAAgBsB,WAAhB,EAAT;;AAEF,MAAIjB,OAAO,CAACE,MAAZ,EAAoB;AAClBI,IAAAA,GAAG,CAACO,IAAJ,CAASpB,CAAC,CAACyB,MAAF,CAAS,CAAT,EAAY,IAAZ,CAAT;AACD;;AACD,SAAOZ,GAAP;AACD;;AAED,SAASS,sBAAT,CAAgCI,GAAhC,EAAqCC,MAArC,EAA6C;AAC3C,MAAIC,KAAK,GAAGD,MAAM,CAACH,WAAP,EAAZ;AACA,SAAOxB,CAAC,CAAC6B,MAAF,CAASH,GAAT,EAAc,UAASI,GAAT,EAAc;AAAE,WAAOA,GAAG,CAACP,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,WAApB,OAAsCI,KAA7C;AAAqD,GAAnF,CAAP;AACD","sourcesContent":["const _ = require('lodash');\r\nconst nouns = require('./nouns');\r\nconst adjectives = require('./adjectives');\r\n\r\n\r\nmodule.exports = generate;\r\n\r\ngenerate.generate = generate;\r\nfunction generate(options) {\r\n  var defaults = {\r\n    number: false,\r\n    words: 2,\r\n    alliterative: false,\r\n  };\r\n  options = _.merge(defaults, options || {});\r\n\r\n  var raw = getRawProjName(options);\r\n\r\n  return {\r\n    raw: raw,\r\n    dashed: raw.join('-'),\r\n    spaced: raw.join(' ')\r\n  };\r\n}\r\n\r\nfunction getRawProjName(options) {\r\n  var raw = [];\r\n  _.times(options.words - 1, function () {\r\n    if (options.alliterative && raw.length)\r\n      raw.push(_.sample(getAlliterativeMatches(adjectives, raw[0].substring(0, 1))));\r\n    else\r\n      raw.push(_.sample(adjectives).toLowerCase());\r\n  });\r\n\r\n  if (options.alliterative)\r\n    raw.push(_.sample(getAlliterativeMatches(nouns, raw[0].substring(0, 1))));\r\n  else\r\n    raw.push(_.sample(nouns).toLowerCase());\r\n\r\n  if (options.number) {\r\n    raw.push(_.random(1, 9999));\r\n  }\r\n  return raw;\r\n}\r\n\r\nfunction getAlliterativeMatches(arr, letter) {\r\n  var check = letter.toLowerCase();\r\n  return _.filter(arr, function(elm) { return elm.substring(0, 1).toLowerCase() === check; });\r\n}\r\n"]},"metadata":{},"sourceType":"script"}