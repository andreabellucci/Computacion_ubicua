{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noefu\\\\Desktop\\\\Computacion_ubicua\\\\SPOC_3\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport React from \"react\"; // COMPONENTS\n\nimport GlobalChat from \"./components/ConnectedUserList\";\nimport ConnectedUserList from \"./components/GlobalChat\"; // import PrivateChat from \"./components/PrivateChat\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generator = require('project-name-generator');\n\nfunction App() {\n  _s();\n\n  const [socket, setSocket] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [publicMessageStack, setPublicMessageStack] = useState([]);\n  const [connectedUserList, setconnectedUserList] = useState([]);\n  /* \r\n  * BLOCK 1\r\n  * Socket EVENT declaration\r\n  */\n\n  useEffect(() => {\n    const socket = io(\"localhost:3001\"); // When the socket connects to the server\n\n    socket.on(\"connect\", () => {\n      const newUserName = generator({\n        words: 2,\n        number: false\n      }).dashed;\n      setUsername(newUserName);\n      socket.emit(\"register_user\", newUserName);\n    }); // A new GLOBAL message comes from the server\n\n    socket.on(\"send_public_message\", message => {\n      setPublicMessageStack(() => {\n        const newArray = [...publicMessageStack, message];\n        console.log(newArray);\n        return newArray;\n      });\n    });\n    setSocket(socket);\n  }, []);\n  /* \r\n   * BLOCK 2\r\n   * Application FUNCTIONS\r\n  */\n\n  function sendPublicMessage() {\n    // Extract the message from the box and clear it\n    let message = document.getElementById(\"input_message\").value;\n\n    if (message != \"\") {\n      document.getElementById(\"input_message\").value = \"\";\n      let newGlobalMessage = {\n        from: username,\n        text: message,\n        datetime: new Date().toLocaleString()\n      };\n      socket.emit(\"broadcast_public_message\", newGlobalMessage);\n    }\n  } // Here we build the entire app\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GlobalChat, {\n      messageList: publicMessageStack,\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectedUserList, {\n      userList: publicMessageStack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"j6cu8SgueqIIa9B7pC4MvYrzucM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Noefu/Desktop/Computacion_ubicua/SPOC_3/client/src/App.js"],"names":["useState","useEffect","useRef","io","React","GlobalChat","ConnectedUserList","generator","require","App","socket","setSocket","username","setUsername","publicMessageStack","setPublicMessageStack","connectedUserList","setconnectedUserList","on","newUserName","words","number","dashed","emit","message","newArray","console","log","sendPublicMessage","document","getElementById","value","newGlobalMessage","from","text","datetime","Date","toLocaleString"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,iBAAP,MAA8B,yBAA9B,C,CACA;;;;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAAC,wBAAD,CAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,kBAAD,EAAqBC,qBAArB,IAA8Cf,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACgB,iBAAD,EAAoBC,oBAApB,IAA4CjB,QAAQ,CAAC,EAAD,CAA1D;AAGA;AACF;AACA;AACA;;AACEC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,MAAM,GAAGP,EAAE,CAAC,gBAAD,CAAjB,CADc,CAGd;;AACAO,IAAAA,MAAM,CAACQ,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzB,YAAMC,WAAW,GAAGZ,SAAS,CAAC;AAAEa,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAD,CAAT,CAAuCC,MAA3D;AACAT,MAAAA,WAAW,CAACM,WAAD,CAAX;AACAT,MAAAA,MAAM,CAACa,IAAP,CAAY,eAAZ,EAA6BJ,WAA7B;AACD,KAJD,EAJc,CAUd;;AACAT,IAAAA,MAAM,CAACQ,EAAP,CAAU,qBAAV,EAAkCM,OAAD,IAAa;AAC5CT,MAAAA,qBAAqB,CAAC,MAAM;AAC1B,cAAMU,QAAQ,GAAG,CAAC,GAAGX,kBAAJ,EAAwBU,OAAxB,CAAjB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,eAAOA,QAAP;AACD,OAJoB,CAArB;AAKD,KAND;AAQAd,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GApBQ,EAoBN,EApBM,CAAT;AAsBA;AACF;AACA;AACA;;AACE,WAASkB,iBAAT,GAA6B;AAC3B;AACA,QAAIJ,OAAO,GAAGK,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAvD;;AACA,QAAIP,OAAO,IAAI,EAAf,EAAmB;AACjBK,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,GAAiD,EAAjD;AACA,UAAIC,gBAAgB,GAAG;AAAEC,QAAAA,IAAI,EAAErB,QAAR;AAAkBsB,QAAAA,IAAI,EAAEV,OAAxB;AAAiCW,QAAAA,QAAQ,EAAE,IAAIC,IAAJ,GAAWC,cAAX;AAA3C,OAAvB;AACA3B,MAAAA,MAAM,CAACa,IAAP,CAAY,0BAAZ,EAAwCS,gBAAxC;AACD;AACF,GA7CY,CA+Cb;;;AACA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,WAAW,EAAElB,kBAAzB;AAA6C,MAAA,QAAQ,EAAEF;AAAvD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,iBAAD;AAAmB,MAAA,QAAQ,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAtDQL,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport React from \"react\";\r\n\r\n\r\n// COMPONENTS\r\nimport GlobalChat from \"./components/ConnectedUserList\";\r\nimport ConnectedUserList from \"./components/GlobalChat\";\r\n// import PrivateChat from \"./components/PrivateChat\";\r\n\r\nconst generator = require('project-name-generator');\r\n\r\nfunction App() {\r\n  const [socket, setSocket] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [publicMessageStack, setPublicMessageStack] = useState([]);\r\n  const [connectedUserList, setconnectedUserList] = useState([]);\r\n\r\n\r\n  /* \r\n  * BLOCK 1\r\n  * Socket EVENT declaration\r\n  */\r\n  useEffect(() => {\r\n    const socket = io(\"localhost:3001\");\r\n\r\n    // When the socket connects to the server\r\n    socket.on(\"connect\", () => {\r\n      const newUserName = generator({ words: 2, number: false }).dashed;\r\n      setUsername(newUserName);\r\n      socket.emit(\"register_user\", newUserName);\r\n    });\r\n\r\n    // A new GLOBAL message comes from the server\r\n    socket.on(\"send_public_message\", (message) => {\r\n      setPublicMessageStack(() => {\r\n        const newArray = [...publicMessageStack, message];\r\n        console.log(newArray);\r\n        return newArray;\r\n      });\r\n    });\r\n\r\n    setSocket(socket);\r\n  }, []);\r\n\r\n  /* \r\n   * BLOCK 2\r\n   * Application FUNCTIONS\r\n  */\r\n  function sendPublicMessage() {\r\n    // Extract the message from the box and clear it\r\n    let message = document.getElementById(\"input_message\").value;\r\n    if (message != \"\") {\r\n      document.getElementById(\"input_message\").value = \"\";\r\n      let newGlobalMessage = { from: username, text: message, datetime: new Date().toLocaleString() };\r\n      socket.emit(\"broadcast_public_message\", newGlobalMessage);\r\n    }\r\n  }\r\n\r\n  // Here we build the entire app\r\n  return (\r\n    <div>\r\n      <GlobalChat messageList={publicMessageStack} username={username} />\r\n      <ConnectedUserList userList={publicMessageStack} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}