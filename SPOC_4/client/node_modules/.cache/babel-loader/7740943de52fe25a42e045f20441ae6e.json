{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noefu\\\\Desktop\\\\asignaturas\\\\ub\\xEDcua\\\\labs y practicas\\\\Computacion_ubicua\\\\SPOC_3\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport React from \"react\"; // COMPONENTS\n\nimport { Context } from \"./components/Context\";\nimport Challenge from \"./components/Challenge\";\nimport Header from \"./components/Header\";\nimport ConnectedUserList from \"./components/ConnectedUserList\";\nimport GlobalChat from \"./components/GlobalChat\";\nimport PrivateChat from \"./components/PrivateChat\";\nimport PendingMessage from \"./components/PendingMessage\";\nimport Input from \"./components/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generator = require('project-name-generator');\n\nexport default function App() {\n  _s();\n\n  /* \r\n  * BLOCK 1\r\n  * Constants\r\n  */\n  const [socket, setSocket] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [publicMessageStack, setPublicMessageStack] = useState([]);\n  const [privateMessageStack, setPrivateMessageStack] = useState([]);\n  const [connectedUserList, setConnectedUserList] = useState([]);\n  const [currentView, setCurrentView] = useState(\"global\"); // global, private, users\n\n  const [currentPrivateChat, setCurrentPrivateChat] = useState(\"\"); // Who you're talking in private at the moment\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [challenge, setChallenge] = useState(null);\n  const [pendingSendingMessage, setPendingSendingMessage] = useState(null);\n  const [arrayShuffledQuestions, setArrayShuffledQuestions] = useState(null);\n  /* \r\n  * BLOCK 2\r\n  * Socket EVENT declaration\r\n  */\n\n  useEffect(() => {\n    const socket = io(\"localhost:3001\"); // When the socket connects to the server\n\n    socket.on(\"connect\", () => {\n      const newUserName = generator({\n        words: 1,\n        number: true\n      }).dashed;\n      setUsername(newUserName);\n      socket.emit(\"register_user\", newUserName);\n    }); // A new GLOBAL message comes from the server\n\n    socket.on(\"deliver_public_message\", message => {\n      setPublicMessageStack(prevMessageStack => [...prevMessageStack, message]);\n    }); // A new PRIVATE message comes from the server\n\n    socket.on(\"deliver_private_message\", message => {\n      setPrivateMessageStack(prevMessageStack => [...prevMessageStack, message]);\n    }); // The updated user connected list arrives\n\n    socket.on(\"update_connected_users_list\", userList => {\n      setConnectedUserList(userList);\n    }); // The server challenge us\n\n    socket.on(\"server_challenge\", () => {\n      // Makes a petition to the API and brings a random question\n      fetch('https://opentdb.com/api.php?amount=1&category=9&difficulty=medium&type=multiple').then(response => response.json()).then(data => {\n        setChallenge(data.results[0]);\n        let array = data.results[0].incorrect_answers;\n        array.push(data.results[0].correct_answer);\n        setArrayShuffledQuestions(shuffleQuestions(array));\n      }).catch(err => {\n        console.log(err);\n        setChallenge(null);\n      });\n    }); // The server force-disconnect us\n\n    socket.on(\"disconnect_user\", () => {\n      setChallenge(null);\n      socket.disconnect();\n      alert(\"Prueba no superada, desconexión del servidor...\");\n    });\n    setSocket(socket);\n  }, []);\n\n  function shuffleQuestions(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    console.log(array);\n    return array;\n  }\n  /* \r\n  * BLOCK 3\r\n  * App build\r\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        value1: [socket, setSocket],\n        value2: [username, setUsername],\n        value3: [publicMessageStack, setPublicMessageStack],\n        value4: [privateMessageStack, setPrivateMessageStack],\n        value5: [connectedUserList, setConnectedUserList],\n        value6: [currentView, setCurrentView],\n        value7: [currentPrivateChat, setCurrentPrivateChat],\n        value8: [newMessage, setNewMessage],\n        value9: [challenge, setChallenge],\n        value10: [pendingSendingMessage, setPendingSendingMessage],\n        value11: [arrayShuffledQuestions, setArrayShuffledQuestions]\n      },\n      children: [/*#__PURE__*/_jsxDEV(Challenge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GlobalChat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConnectedUserList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrivateChat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PendingMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"s2KMqo6KAuInudNot1vyMGkujRY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Noefu/Desktop/asignaturas/ubícua/labs y practicas/Computacion_ubicua/SPOC_3/client/src/App.js"],"names":["useState","useEffect","useRef","io","React","Context","Challenge","Header","ConnectedUserList","GlobalChat","PrivateChat","PendingMessage","Input","generator","require","App","socket","setSocket","username","setUsername","publicMessageStack","setPublicMessageStack","privateMessageStack","setPrivateMessageStack","connectedUserList","setConnectedUserList","currentView","setCurrentView","currentPrivateChat","setCurrentPrivateChat","newMessage","setNewMessage","challenge","setChallenge","pendingSendingMessage","setPendingSendingMessage","arrayShuffledQuestions","setArrayShuffledQuestions","on","newUserName","words","number","dashed","emit","message","prevMessageStack","userList","fetch","then","response","json","data","results","array","incorrect_answers","push","correct_answer","shuffleQuestions","catch","err","console","log","disconnect","alert","i","length","j","Math","floor","random","value1","value2","value3","value4","value5","value6","value7","value8","value9","value10","value11"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAGA,MAAMC,SAAS,GAAGC,OAAO,CAAC,wBAAD,CAAzB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B;AACF;AACA;AACA;AACE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,kBAAD,EAAqBC,qBAArB,IAA8CrB,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACsB,mBAAD,EAAsBC,sBAAtB,IAAgDvB,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACwB,iBAAD,EAAoBC,oBAApB,IAA4CzB,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,QAAD,CAA9C,CAX4B,CAW8B;;AAC1D,QAAM,CAAC4B,kBAAD,EAAqBC,qBAArB,IAA8C7B,QAAQ,CAAC,EAAD,CAA5D,CAZ4B,CAYsC;;AAClE,QAAM,CAAC8B,UAAD,EAAaC,aAAb,IAA8B/B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgC,SAAD,EAAYC,YAAZ,IAA4BjC,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACkC,qBAAD,EAAwBC,wBAAxB,IAAoDnC,QAAQ,CAAC,IAAD,CAAlE;AACA,QAAM,CAACoC,sBAAD,EAAyBC,yBAAzB,IAAsDrC,QAAQ,CAAC,IAAD,CAApE;AAGA;AACF;AACA;AACA;;AACEC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,MAAM,GAAGb,EAAE,CAAC,gBAAD,CAAjB,CADc,CAGd;;AACAa,IAAAA,MAAM,CAACsB,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzB,YAAMC,WAAW,GAAG1B,SAAS,CAAC;AAAE2B,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAD,CAAT,CAAsCC,MAA1D;AACAvB,MAAAA,WAAW,CAACoB,WAAD,CAAX;AACAvB,MAAAA,MAAM,CAAC2B,IAAP,CAAY,eAAZ,EAA6BJ,WAA7B;AACD,KAJD,EAJc,CAUd;;AACAvB,IAAAA,MAAM,CAACsB,EAAP,CAAU,wBAAV,EAAqCM,OAAD,IAAa;AAC/CvB,MAAAA,qBAAqB,CAAEwB,gBAAD,IAAsB,CAAC,GAAGA,gBAAJ,EAAsBD,OAAtB,CAAvB,CAArB;AACD,KAFD,EAXc,CAed;;AACA5B,IAAAA,MAAM,CAACsB,EAAP,CAAU,yBAAV,EAAsCM,OAAD,IAAa;AAChDrB,MAAAA,sBAAsB,CAAEsB,gBAAD,IAAsB,CAAC,GAAGA,gBAAJ,EAAsBD,OAAtB,CAAvB,CAAtB;AACD,KAFD,EAhBc,CAoBd;;AACA5B,IAAAA,MAAM,CAACsB,EAAP,CAAU,6BAAV,EAA0CQ,QAAD,IAAc;AACrDrB,MAAAA,oBAAoB,CAACqB,QAAD,CAApB;AACD,KAFD,EArBc,CAyBd;;AACA9B,IAAAA,MAAM,CAACsB,EAAP,CAAU,kBAAV,EAA8B,MAAM;AAClC;AAEAS,MAAAA,KAAK,CAAC,iFAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZlB,QAAAA,YAAY,CAACkB,IAAI,CAACC,OAAL,CAAa,CAAb,CAAD,CAAZ;AAEA,YAAIC,KAAK,GAAGF,IAAI,CAACC,OAAL,CAAa,CAAb,EAAgBE,iBAA5B;AACAD,QAAAA,KAAK,CAACE,IAAN,CAAWJ,IAAI,CAACC,OAAL,CAAa,CAAb,EAAgBI,cAA3B;AACAnB,QAAAA,yBAAyB,CAACoB,gBAAgB,CAACJ,KAAD,CAAjB,CAAzB;AACD,OARH,EASGK,KATH,CASSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA1B,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAZH;AAaD,KAhBD,EA1Bc,CA4Cd;;AACAjB,IAAAA,MAAM,CAACsB,EAAP,CAAU,iBAAV,EAA6B,MAAM;AACjCL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAjB,MAAAA,MAAM,CAAC8C,UAAP;AACAC,MAAAA,KAAK,CAAC,iDAAD,CAAL;AACD,KAJD;AAMA9C,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GApDQ,EAoDN,EApDM,CAAT;;AAuDA,WAASyC,gBAAT,CAA0BJ,KAA1B,EAAiC;AAE/B,SAAK,IAAIW,CAAC,GAAGX,KAAK,CAACY,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,YAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,OAACX,KAAK,CAACW,CAAD,CAAN,EAAWX,KAAK,CAACa,CAAD,CAAhB,IAAuB,CAACb,KAAK,CAACa,CAAD,CAAN,EAAWb,KAAK,CAACW,CAAD,CAAhB,CAAvB;AACD;;AAEDJ,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEA,WAAOA,KAAP;AACD;AAGD;AACF;AACA;AACA;;;AACE,sBACE;AAAA,2BACE,QAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE;AACvBiB,QAAAA,MAAM,EAAE,CAACtD,MAAD,EAASC,SAAT,CADe;AAEvBsD,QAAAA,MAAM,EAAE,CAACrD,QAAD,EAAWC,WAAX,CAFe;AAGvBqD,QAAAA,MAAM,EAAE,CAACpD,kBAAD,EAAqBC,qBAArB,CAHe;AAIvBoD,QAAAA,MAAM,EAAE,CAACnD,mBAAD,EAAsBC,sBAAtB,CAJe;AAKvBmD,QAAAA,MAAM,EAAE,CAAClD,iBAAD,EAAoBC,oBAApB,CALe;AAMvBkD,QAAAA,MAAM,EAAE,CAACjD,WAAD,EAAcC,cAAd,CANe;AAOvBiD,QAAAA,MAAM,EAAE,CAAChD,kBAAD,EAAqBC,qBAArB,CAPe;AAQvBgD,QAAAA,MAAM,EAAE,CAAC/C,UAAD,EAAaC,aAAb,CARe;AASvB+C,QAAAA,MAAM,EAAE,CAAC9C,SAAD,EAAYC,YAAZ,CATe;AAUvB8C,QAAAA,OAAO,EAAE,CAAC7C,qBAAD,EAAwBC,wBAAxB,CAVc;AAWvB6C,QAAAA,OAAO,EAAE,CAAC5C,sBAAD,EAAyBC,yBAAzB;AAXc,OAAzB;AAAA,8BAaE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAjBF,eAkBE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAxHuBtB,G;;KAAAA,G","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport React from \"react\";\r\n\r\n\r\n// COMPONENTS\r\nimport { Context } from \"./components/Context\";\r\nimport Challenge from \"./components/Challenge\";\r\nimport Header from \"./components/Header\";\r\nimport ConnectedUserList from \"./components/ConnectedUserList\";\r\nimport GlobalChat from \"./components/GlobalChat\";\r\nimport PrivateChat from \"./components/PrivateChat\";\r\nimport PendingMessage from \"./components/PendingMessage\";\r\nimport Input from \"./components/Input\";\r\n\r\n\r\nconst generator = require('project-name-generator');\r\n\r\nexport default function App() {\r\n\r\n  /* \r\n  * BLOCK 1\r\n  * Constants\r\n  */\r\n  const [socket, setSocket] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [publicMessageStack, setPublicMessageStack] = useState([]);\r\n  const [privateMessageStack, setPrivateMessageStack] = useState([]);\r\n  const [connectedUserList, setConnectedUserList] = useState([]);\r\n  const [currentView, setCurrentView] = useState(\"global\"); // global, private, users\r\n  const [currentPrivateChat, setCurrentPrivateChat] = useState(\"\"); // Who you're talking in private at the moment\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [challenge, setChallenge] = useState(null);\r\n  const [pendingSendingMessage, setPendingSendingMessage] = useState(null);\r\n  const [arrayShuffledQuestions, setArrayShuffledQuestions] = useState(null);\r\n\r\n\r\n  /* \r\n  * BLOCK 2\r\n  * Socket EVENT declaration\r\n  */\r\n  useEffect(() => {\r\n    const socket = io(\"localhost:3001\");\r\n\r\n    // When the socket connects to the server\r\n    socket.on(\"connect\", () => {\r\n      const newUserName = generator({ words: 1, number: true }).dashed;\r\n      setUsername(newUserName);\r\n      socket.emit(\"register_user\", newUserName);\r\n    });\r\n\r\n    // A new GLOBAL message comes from the server\r\n    socket.on(\"deliver_public_message\", (message) => {\r\n      setPublicMessageStack((prevMessageStack) => [...prevMessageStack, message]);\r\n    });\r\n\r\n    // A new PRIVATE message comes from the server\r\n    socket.on(\"deliver_private_message\", (message) => {\r\n      setPrivateMessageStack((prevMessageStack) => [...prevMessageStack, message]);\r\n    });\r\n\r\n    // The updated user connected list arrives\r\n    socket.on(\"update_connected_users_list\", (userList) => {\r\n      setConnectedUserList(userList);\r\n    });\r\n\r\n    // The server challenge us\r\n    socket.on(\"server_challenge\", () => {\r\n      // Makes a petition to the API and brings a random question\r\n\r\n      fetch('https://opentdb.com/api.php?amount=1&category=9&difficulty=medium&type=multiple')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setChallenge(data.results[0]);\r\n\r\n          let array = data.results[0].incorrect_answers;\r\n          array.push(data.results[0].correct_answer);\r\n          setArrayShuffledQuestions(shuffleQuestions(array));\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          setChallenge(null);\r\n        });\r\n    });\r\n\r\n    // The server force-disconnect us\r\n    socket.on(\"disconnect_user\", () => {\r\n      setChallenge(null);\r\n      socket.disconnect();\r\n      alert(\"Prueba no superada, desconexión del servidor...\");\r\n    });\r\n\r\n    setSocket(socket);\r\n  }, []);\r\n\r\n\r\n  function shuffleQuestions(array) {\r\n\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n\r\n    console.log(array);\r\n\r\n    return array;\r\n  }\r\n\r\n\r\n  /* \r\n  * BLOCK 3\r\n  * App build\r\n  */\r\n  return (\r\n    <div>\r\n      <Context.Provider value={{\r\n        value1: [socket, setSocket],\r\n        value2: [username, setUsername],\r\n        value3: [publicMessageStack, setPublicMessageStack],\r\n        value4: [privateMessageStack, setPrivateMessageStack],\r\n        value5: [connectedUserList, setConnectedUserList],\r\n        value6: [currentView, setCurrentView],\r\n        value7: [currentPrivateChat, setCurrentPrivateChat],\r\n        value8: [newMessage, setNewMessage],\r\n        value9: [challenge, setChallenge],\r\n        value10: [pendingSendingMessage, setPendingSendingMessage],\r\n        value11: [arrayShuffledQuestions, setArrayShuffledQuestions]\r\n      }}>\r\n        <Challenge />\r\n        <Header />\r\n        <GlobalChat />\r\n        <ConnectedUserList />\r\n        <PrivateChat />\r\n        <PendingMessage />\r\n        <Input />\r\n      </Context.Provider>\r\n    </div >\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}