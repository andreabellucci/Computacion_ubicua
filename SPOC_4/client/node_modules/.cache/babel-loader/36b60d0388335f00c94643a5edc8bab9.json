{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noefu\\\\Desktop\\\\Computacion_ubicua\\\\SPOC_3\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\"; // import { SOCKET } from \"./components/Socket\"; // SOCKET is a constant from another file, that is to prevent multiple connections\n\nimport React from \"react\"; // COMPONENTS\n\nimport GlobalChat from \"./components/ConnectedUserList\";\nimport ConnectedUserList from \"./components/GlobalChat\";\nimport PrivateChat from \"./components/PrivateChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [socket, setSocket] = useState(io(\"localhost:3001\"));\n  const [username, setUsername] = useState(\"\");\n  const [globalChat, setGlobalChat] = useState();\n  /* \r\n  * BLOCK 1\r\n  * Socket EVENT declaration\r\n  */\n\n  useEffect(() => {\n    let localSocket = socket;\n    console.log(\"Estoy entrando\"); // The server gives us our username on connect\n\n    localSocket.on(\"new_username\", function (myUserName) {\n      setUsername(myUserName);\n    }); // A new GLOBAL message comes from the server\n\n    localSocket.on(\"broadcast_public_message\", function (newGLobalMessage) {\n      console.log(\"me acaba de llegar un mensage global que cosas\");\n      let newHtmlMessage = buildTextMessage(newGLobalMessage);\n      setGlobalChat(newHtmlMessage);\n    });\n    setSocket(localSocket);\n  }, []);\n  /* \r\n   * BLOCK 2\r\n   * Application FUNCTIONS\r\n  */\n\n  function sendPublicMessage() {\n    // Extract the message from the box and clear it\n    let message = document.getElementById(\"input_message\").value;\n\n    if (message != \"\") {\n      document.getElementById(\"input_message\").value = \"\";\n      let newGlobalMessage = {\n        from: username,\n        text: message,\n        datetime: new Date().toLocaleString()\n      };\n      socket.emit(\"send_public_message\", newGlobalMessage);\n    }\n  }\n  /* \r\n   * BLOCK 3\r\n   * Auxiliar FUNCTIONS\r\n  */\n\n\n  function buildTextMessage(message) {\n    console.log(message);\n    if (message.from == username) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my_text_message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_message_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text_message_username\",\n          children: message.from\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text_messagen_datetime\",\n          children: message.datetime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_message_content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ur_text_message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_message_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text_message_username\",\n          children: message.from\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text_messagen_datetime\",\n          children: message.datetime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_message_content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  } // Here we build the entire app\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"header_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://logodix.com/logo/1229689.png\",\n        alt: \"messenger butterfly icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"sendertext\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat_container\",\n      children: globalChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      id: \"footer_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"input_message\",\n        placeholder: \"message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: sendPublicMessage,\n        id: \"input_submit\",\n        value: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rR9YvGLJoQYP1Y3790lx+yAphNw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Noefu/Desktop/Computacion_ubicua/SPOC_3/client/src/App.js"],"names":["useState","useEffect","useRef","io","React","GlobalChat","ConnectedUserList","PrivateChat","App","socket","setSocket","username","setUsername","globalChat","setGlobalChat","localSocket","console","log","on","myUserName","newGLobalMessage","newHtmlMessage","buildTextMessage","sendPublicMessage","message","document","getElementById","value","newGlobalMessage","from","text","datetime","Date","toLocaleString","emit"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\n// import { SOCKET } from \"./components/Socket\"; // SOCKET is a constant from another file, that is to prevent multiple connections\r\nimport React from \"react\";\r\n\r\n// COMPONENTS\r\nimport GlobalChat from \"./components/ConnectedUserList\";\r\nimport ConnectedUserList from \"./components/GlobalChat\";\r\nimport PrivateChat from \"./components/PrivateChat\";\r\n\r\n\r\n\r\nfunction App() {\r\n  const [socket, setSocket] = useState(io(\"localhost:3001\"));\r\n  const [username, setUsername] = useState(\"\");\r\n  const [globalChat, setGlobalChat] = useState();\r\n\r\n  /* \r\n  * BLOCK 1\r\n  * Socket EVENT declaration\r\n  */\r\n  useEffect(() => {\r\n    let localSocket = socket;\r\n\r\n    console.log(\"Estoy entrando\");\r\n    // The server gives us our username on connect\r\n    localSocket.on(\"new_username\", function (myUserName) {\r\n      setUsername(myUserName);\r\n    });\r\n\r\n    // A new GLOBAL message comes from the server\r\n    localSocket.on(\"broadcast_public_message\", function (newGLobalMessage) {\r\n      console.log(\"me acaba de llegar un mensage global que cosas\");\r\n      let newHtmlMessage = buildTextMessage(newGLobalMessage);\r\n      setGlobalChat(newHtmlMessage);\r\n    });\r\n\r\n    setSocket(localSocket);\r\n  }, []);\r\n\r\n\r\n  /* \r\n   * BLOCK 2\r\n   * Application FUNCTIONS\r\n  */\r\n  function sendPublicMessage() {\r\n    // Extract the message from the box and clear it\r\n    let message = document.getElementById(\"input_message\").value;\r\n    if (message != \"\") {\r\n      document.getElementById(\"input_message\").value = \"\";\r\n      let newGlobalMessage = { from: username, text: message, datetime: new Date().toLocaleString() };\r\n      socket.emit(\"send_public_message\", newGlobalMessage);\r\n    }\r\n  }\r\n\r\n  /* \r\n   * BLOCK 3\r\n   * Auxiliar FUNCTIONS\r\n  */\r\n  function buildTextMessage(message) {\r\n    console.log(message);\r\n    if (message.from == username)\r\n      return (\r\n        <div className=\"my_text_message\" >\r\n          <div className=\"text_message_header\">\r\n            <p className=\"text_message_username\">{message.from}</p>\r\n            <p className=\"text_messagen_datetime\">{message.datetime}</p>\r\n          </div>\r\n          <div className=\"text_message_content\"><p>{message.text}</p></div>\r\n        </div>\r\n      );\r\n    else\r\n      return (\r\n        <div className=\"ur_text_message\" >\r\n          <div className=\"text_message_header\">\r\n            <p className=\"text_message_username\">{message.from}</p>\r\n            <p className=\"text_messagen_datetime\">{message.datetime}</p>\r\n          </div>\r\n          <div className=\"text_message_content\"><p>{message.text}</p></div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  // Here we build the entire app\r\n  return (\r\n    <div>\r\n      <header id=\"header_div\">\r\n        <img src=\"https://logodix.com/logo/1229689.png\" alt=\"messenger butterfly icon\" />\r\n        <div>\r\n          <p>sendertext</p>\r\n        </div>\r\n      </header>\r\n\r\n      <div id=\"chat_container\">{globalChat}</div>\r\n\r\n      <footer id=\"footer_div\">\r\n        <input type=\"text\" id=\"input_message\" placeholder=\"message...\" />\r\n        <input type=\"submit\" onClick={sendPublicMessage} id=\"input_submit\" value=\"&#10148;\" />\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}