{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noefu\\\\Desktop\\\\asignaturas\\\\ub\\xEDcua\\\\labs y practicas\\\\Computacion_ubicua\\\\SPOC_3\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport React from \"react\"; // COMPONENTS\n\nimport { Context } from \"./components/Context\";\nimport Challenge from \"./components/Challenge\";\nimport Header from \"./components/Header\";\nimport ConnectedUserList from \"./components/ConnectedUserList\";\nimport GlobalChat from \"./components/GlobalChat\";\nimport PrivateChat from \"./components/PrivateChat\";\nimport Input from \"./components/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generator = require('project-name-generator');\n\nexport default function App() {\n  _s();\n\n  /* \r\n  * BLOCK 1\r\n  * Constants\r\n  */\n  const [socket, setSocket] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [publicMessageStack, setPublicMessageStack] = useState([]);\n  const [privateMessageStack, setPrivateMessageStack] = useState([]);\n  const [connectedUserList, setConnectedUserList] = useState([]);\n  const [currentView, setCurrentView] = useState(\"global\"); // global, private, users\n\n  const [currentPrivateChat, setCurrentPrivateChat] = useState(\"\"); // Who you're talking in private at the moment\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [challenge, setChallenge] = useState(null);\n  /* \r\n  * BLOCK 2\r\n  * Socket EVENT declaration\r\n  */\n\n  useEffect(() => {\n    const socket = io(\"localhost:3001\"); // When the socket connects to the server\n\n    socket.on(\"connect\", () => {\n      const newUserName = generator({\n        words: 2,\n        number: false\n      }).dashed;\n      setUsername(newUserName);\n      socket.emit(\"register_user\", newUserName);\n    }); // A new GLOBAL message comes from the server\n\n    socket.on(\"deliver_public_message\", message => {\n      setPublicMessageStack(prevMessageStack => [...prevMessageStack, message]);\n    }); // A new PRIVATE message comes from the server\n\n    socket.on(\"deliver_private_message\", message => {\n      console.log(\"new message!!!!!\");\n      console.log(message);\n      setPrivateMessageStack(prevMessageStack => [...prevMessageStack, message]);\n    }); // The updated user connected list arrives\n\n    socket.on(\"update_connected_users_list\", userList => {\n      setConnectedUserList(userList);\n    }); // The server challenge us\n\n    socket.on(\"server_challenge\", challenge => {\n      setChallenge(challenge);\n    }); // The server force-disconnect us\n\n    socket.on(\"disconnect_user\", () => {\n      socket.disconnect();\n    });\n    setSocket(socket);\n  }, []);\n  /* \r\n  * BLOCK 3\r\n  * App build\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"// Setting up all CONTEXT VARIABLES\", /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        value1: [socket, setSocket],\n        value2: [username, setUsername],\n        value3: [publicMessageStack, setPublicMessageStack],\n        value4: [privateMessageStack, setPrivateMessageStack],\n        value5: [connectedUserList, setConnectedUserList],\n        value6: [currentView, setCurrentView],\n        value7: [currentPrivateChat, setCurrentPrivateChat],\n        value8: [newMessage, setNewMessage],\n        value9: [challenge, setChallenge]\n      },\n      children: [\"// Compose the entire app piece by piece\", /*#__PURE__*/_jsxDEV(Challenge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        currentPrivateChat: currentPrivateChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GlobalChat, {\n        messageList: publicMessageStack,\n        username: username,\n        currentView: currentView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConnectedUserList, {\n        username: username,\n        connectedUserList: connectedUserList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrivateChat, {\n        messageList: privateMessageStack,\n        currentChat: currentPrivateChat,\n        username: username,\n        currentView: currentView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dmx0BR5ny23+ffZncek73hMW7rQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Noefu/Desktop/asignaturas/ub√≠cua/labs y practicas/Computacion_ubicua/SPOC_3/client/src/App.js"],"names":["useState","useEffect","useRef","io","React","Context","Challenge","Header","ConnectedUserList","GlobalChat","PrivateChat","Input","generator","require","App","socket","setSocket","username","setUsername","publicMessageStack","setPublicMessageStack","privateMessageStack","setPrivateMessageStack","connectedUserList","setConnectedUserList","currentView","setCurrentView","currentPrivateChat","setCurrentPrivateChat","newMessage","setNewMessage","challenge","setChallenge","on","newUserName","words","number","dashed","emit","message","prevMessageStack","console","log","userList","disconnect","value1","value2","value3","value4","value5","value6","value7","value8","value9"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport React from \"react\";\r\n\r\n\r\n// COMPONENTS\r\nimport { Context } from \"./components/Context\";\r\nimport Challenge from \"./components/Challenge\";\r\nimport Header from \"./components/Header\";\r\nimport ConnectedUserList from \"./components/ConnectedUserList\";\r\nimport GlobalChat from \"./components/GlobalChat\";\r\nimport PrivateChat from \"./components/PrivateChat\";\r\nimport Input from \"./components/Input\";\r\n\r\n\r\nconst generator = require('project-name-generator');\r\n\r\nexport default function App() {\r\n\r\n  /* \r\n  * BLOCK 1\r\n  * Constants\r\n  */\r\n  const [socket, setSocket] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [publicMessageStack, setPublicMessageStack] = useState([]);\r\n  const [privateMessageStack, setPrivateMessageStack] = useState([]);\r\n  const [connectedUserList, setConnectedUserList] = useState([]);\r\n  const [currentView, setCurrentView] = useState(\"global\"); // global, private, users\r\n  const [currentPrivateChat, setCurrentPrivateChat] = useState(\"\"); // Who you're talking in private at the moment\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [challenge, setChallenge] = useState(null);\r\n\r\n\r\n  /* \r\n  * BLOCK 2\r\n  * Socket EVENT declaration\r\n  */\r\n  useEffect(() => {\r\n    const socket = io(\"localhost:3001\");\r\n\r\n    // When the socket connects to the server\r\n    socket.on(\"connect\", () => {\r\n      const newUserName = generator({ words: 2, number: false }).dashed;\r\n      setUsername(newUserName);\r\n      socket.emit(\"register_user\", newUserName);\r\n    });\r\n\r\n    // A new GLOBAL message comes from the server\r\n    socket.on(\"deliver_public_message\", (message) => {\r\n      setPublicMessageStack((prevMessageStack) => [...prevMessageStack, message]);\r\n    });\r\n\r\n    // A new PRIVATE message comes from the server\r\n    socket.on(\"deliver_private_message\", (message) => {\r\n      console.log(\"new message!!!!!\");\r\n      console.log(message);\r\n      setPrivateMessageStack((prevMessageStack) => [...prevMessageStack, message]);\r\n    });\r\n\r\n    // The updated user connected list arrives\r\n    socket.on(\"update_connected_users_list\", (userList) => {\r\n      setConnectedUserList(userList);\r\n    });\r\n\r\n    // The server challenge us\r\n    socket.on(\"server_challenge\", (challenge) => {\r\n      setChallenge(challenge);\r\n    });\r\n\r\n    // The server force-disconnect us\r\n    socket.on(\"disconnect_user\", () => {\r\n      socket.disconnect();\r\n    });\r\n\r\n    setSocket(socket);\r\n  }, []);\r\n\r\n\r\n  /* \r\n  * BLOCK 3\r\n  * App build\r\n  */\r\n  return (\r\n    <div>\r\n      // Setting up all CONTEXT VARIABLES\r\n      <Context.Provider value={{\r\n        value1: [socket, setSocket],\r\n        value2: [username, setUsername],\r\n        value3: [publicMessageStack, setPublicMessageStack],\r\n        value4: [privateMessageStack, setPrivateMessageStack],\r\n        value5: [connectedUserList, setConnectedUserList],\r\n        value6: [currentView, setCurrentView],\r\n        value7: [currentPrivateChat, setCurrentPrivateChat],\r\n        value8: [newMessage, setNewMessage],\r\n        value9: [challenge, setChallenge],\r\n      }}>\r\n\r\n        // Compose the entire app piece by piece\r\n        <Challenge></Challenge>\r\n        <Header currentPrivateChat={currentPrivateChat} />\r\n        <GlobalChat messageList={publicMessageStack} username={username} currentView={currentView} />\r\n        <ConnectedUserList username={username} connectedUserList={connectedUserList} />\r\n        <PrivateChat messageList={privateMessageStack} currentChat={currentPrivateChat} username={username} currentView={currentView} />\r\n        <Input></Input>\r\n\r\n      </Context.Provider>\r\n    </div >\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}