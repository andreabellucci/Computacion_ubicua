{"ast":null,"code":"export default function Accelerometer() {\n  let lastX = 0;\n  let lastY = 0;\n  let lastZ = 0;\n  let shaking = false;\n  let timer = null;\n  const options = {\n    threshold: 15\n  };\n\n  if ('Accelerometer' in window) {\n    try {\n      const acc = new window.Accelerometer({\n        frequency: 60\n      });\n      /*acc.addEventListener(\"reading\", function(){\r\n           })*/\n\n      acc.onreading = () => {\n        const deltaX = Math.abs(lastX - acc.x);\n        const deltaY = Math.abs(lastY - acc.y);\n        const deltaZ = Math.abs(lastZ - acc.z);\n\n        if (deltaX > options.threshold && deltaY > options.threshold || deltaX > options.threshold && deltaZ > options.threshold || deltaY > options.threshold && deltaZ > options.threshold) {\n          if (!shaking) {\n            console.log('shake');\n            shaking = true;\n            document.header.style.color = \"red\";\n\n            if (timer) {\n              clearTimeout(timer);\n              timer = null;\n            }\n          }\n        } else {\n          if (shaking) {\n            shaking = false;\n            timer = setTimeout(() => {\n              console.log(\"stop\");\n              document.body.style.backgroundColor = \"white\";\n            }, 500);\n          }\n        }\n\n        lastX = acc.x;\n        lastY = acc.y;\n        lastZ = acc.z;\n      };\n\n      acc.start();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n_c = Accelerometer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accelerometer\");","map":{"version":3,"sources":["C:/Users/Noefu/Desktop/asignaturas/ubÃ­cua/labs y practicas/Computacion_ubicua/SPOC_3/client/src/components/Accelerometer.js"],"names":["Accelerometer","lastX","lastY","lastZ","shaking","timer","options","threshold","window","acc","frequency","onreading","deltaX","Math","abs","x","deltaY","y","deltaZ","z","console","log","document","header","style","color","clearTimeout","setTimeout","body","backgroundColor","start","err"],"mappings":"AAAA,eAAe,SAASA,aAAT,GAAyB;AAEtC,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,KAAK,GAAG,CAAZ;AAEA,MAAIC,OAAO,GAAG,KAAd;AACA,MAAIC,KAAK,GAAG,IAAZ;AAEA,QAAMC,OAAO,GAAG;AACdC,IAAAA,SAAS,EAAE;AADG,GAAhB;;AAKA,MAAI,mBAAmBC,MAAvB,EAA+B;AAC7B,QAAI;AACF,YAAMC,GAAG,GAAG,IAAID,MAAM,CAACR,aAAX,CAAyB;AAAEU,QAAAA,SAAS,EAAE;AAAb,OAAzB,CAAZ;AACA;AACN;;AAEMD,MAAAA,GAAG,CAACE,SAAJ,GAAgB,MAAM;AACpB,cAAMC,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASb,KAAK,GAAGQ,GAAG,CAACM,CAArB,CAAf;AACA,cAAMC,MAAM,GAAGH,IAAI,CAACC,GAAL,CAASZ,KAAK,GAAGO,GAAG,CAACQ,CAArB,CAAf;AACA,cAAMC,MAAM,GAAGL,IAAI,CAACC,GAAL,CAASX,KAAK,GAAGM,GAAG,CAACU,CAArB,CAAf;;AAEA,YAAMP,MAAM,GAAGN,OAAO,CAACC,SAAlB,IAAiCS,MAAM,GAAGV,OAAO,CAACC,SAAnD,IACAK,MAAM,GAAGN,OAAO,CAACC,SAAlB,IAAiCW,MAAM,GAAGZ,OAAO,CAACC,SADjD,IAEAS,MAAM,GAAGV,OAAO,CAACC,SAAlB,IAAiCW,MAAM,GAAGZ,OAAO,CAACC,SAFrD,EAGE;AACA,cAAI,CAACH,OAAL,EAAc;AACZgB,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAjB,YAAAA,OAAO,GAAG,IAAV;AACAkB,YAAAA,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsBC,KAAtB,GAA8B,KAA9B;;AACA,gBAAIpB,KAAJ,EAAW;AACTqB,cAAAA,YAAY,CAACrB,KAAD,CAAZ;AACAA,cAAAA,KAAK,GAAG,IAAR;AACD;AACF;AACF,SAbD,MAaO;AACL,cAAID,OAAJ,EAAa;AACXA,YAAAA,OAAO,GAAG,KAAV;AAEAC,YAAAA,KAAK,GAAGsB,UAAU,CAAC,MAAM;AACvBP,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAC,cAAAA,QAAQ,CAACM,IAAT,CAAcJ,KAAd,CAAoBK,eAApB,GAAsC,OAAtC;AACD,aAHiB,EAGf,GAHe,CAAlB;AAID;AACF;;AAED5B,QAAAA,KAAK,GAAGQ,GAAG,CAACM,CAAZ;AACAb,QAAAA,KAAK,GAAGO,GAAG,CAACQ,CAAZ;AACAd,QAAAA,KAAK,GAAGM,GAAG,CAACU,CAAZ;AAED,OAjCD;;AAmCAV,MAAAA,GAAG,CAACqB,KAAJ;AACD,KAzCD,CAyCE,OAAOC,GAAP,EAAY;AACZX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACD;AACF;AACF;KA5DuB/B,a","sourcesContent":["export default function Accelerometer() {\r\n\r\n  let lastX = 0;\r\n  let lastY = 0;\r\n  let lastZ = 0;\r\n\r\n  let shaking = false;\r\n  let timer = null;\r\n\r\n  const options = {\r\n    threshold: 15\r\n  };\r\n\r\n\r\n  if ('Accelerometer' in window) {\r\n    try {\r\n      const acc = new window.Accelerometer({ frequency: 60 });\r\n      /*acc.addEventListener(\"reading\", function(){\r\n   \r\n      })*/\r\n      acc.onreading = () => {\r\n        const deltaX = Math.abs(lastX - acc.x);\r\n        const deltaY = Math.abs(lastY - acc.y);\r\n        const deltaZ = Math.abs(lastZ - acc.z);\r\n\r\n        if (((deltaX > options.threshold) && (deltaY > options.threshold)) ||\r\n          ((deltaX > options.threshold) && (deltaZ > options.threshold)) ||\r\n          ((deltaY > options.threshold) && (deltaZ > options.threshold))\r\n        ) {\r\n          if (!shaking) {\r\n            console.log('shake');\r\n            shaking = true;\r\n            document.header.style.color = \"red\";\r\n            if (timer) {\r\n              clearTimeout(timer);\r\n              timer = null;\r\n            }\r\n          }\r\n        } else {\r\n          if (shaking) {\r\n            shaking = false;\r\n\r\n            timer = setTimeout(() => {\r\n              console.log(\"stop\");\r\n              document.body.style.backgroundColor = \"white\";\r\n            }, 500);\r\n          }\r\n        }\r\n\r\n        lastX = acc.x;\r\n        lastY = acc.y;\r\n        lastZ = acc.z;\r\n\r\n      }\r\n\r\n      acc.start();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}